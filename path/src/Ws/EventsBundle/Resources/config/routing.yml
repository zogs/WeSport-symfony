#EVENTS
ws_events_homepage:
    pattern:  /hello/{name}
    defaults: { _controller: WsEventsBundle:Event:index }
ws_event_view:
    pattern: /view/{event}/{slug}
    defaults: { _controller: WsEventsBundle:Event:view }
    requirements:
        event: \d+
ws_event_new:
    pattern: /create
    defaults: { _controller: WsEventsBundle:Event:create }
ws_event_delete:
    pattern: /delete/{event}/{token}
    defaults: { _controller: WsEventsBundle:Event:delete }
    requirements:
        event: \d+
ws_event_edit:
    pattern: /edit/{event}
    defaults: { _controller: WsEventsBundle:Event:edit }
    requirements:
        event: \d+
        _method: GET|POST

#SPOT
ws_spot_index:
    pattern: /spot/index
    defaults: { _controller: WsEventsBundle:Spot:index }
ws_spot_new:
    pattern: /spot/new
    defaults: { _controller: WsEventsBundle:Spot:create }
ws_spot_edit:
    pattern: /spot/edit/{spot}
    defaults: { _controller: WsEventsBundle:Spot:edit }
    requirements:
        spot: \d+
ws_spot_delete:
    pattern: /spot/delete
    defaults: { _controller: WsEventsBundle:Spot:delete }
ws_spot_autocomplete:
    pattern: /spot/ajax/{country}/{search}
    defaults: { _controller: WsEventsBundle:Spot:autoComplete, country: 'FR', search:'' }
    requirements:
        _method: GET

#CALENDAR
ws_calendar_ajax:
    pattern: /calendar/ajax/{date}
    defaults: { _controller: WsEventsBundle:Calendar:ajax, date:'now'}
    requirements:         
        _method: GET
ws_calendar_reset:
    pattern: /calendar/reset
    defaults: { _controller: WsEventsBundle:Calendar:reset}
    requirements:         
        _method: GET
ws_calendar:
    pattern: /calendar/{date}/{city}/{sports}/{type}/{nbdays}/{time}/{price}/{level}/{organizer}
    defaults: { _controller: WsEventsBundle:Calendar:load, city:null, sports:null, date:null, nbdays:null, type:null, time:null, price:null, level:null, organizer:null }
    requirements:         
        _method: GET
ws_calendar_update:
    pattern: /calendar/update
    defaults: { _controller:WsEventsBundle:Calendar:update }
    requirements:
        _method: POST

#PARTICIPATION
ws_participation_add:
    pattern: /add/me/{event}/{token}
    defaults: { _controller: WsEventsBundle:Participation:add }
    requirements:
        _method: GET
ws_participation_cancel:
    pattern: /cancel/me/{event}/{token}
    defaults: { _controller: WsEventsBundle:Participation:cancel }
    requirements:
        _method: GET


#INVITATION
ws_invit_new:
    pattern: /invite/{event}
    defaults: { _controller: WsEventsBundle:Invitation:create}
    requirements:
        event: \d+
ws_invit_resend:
    pattern: /invited/resent/{invited}
    defaults: { _controller: WsEventsBundle:Invitation:resend}
    requirements:
        invited: \d+
ws_invit_blacklist_add:
    pattern: /invitation/addblacklist/{emails}
    defaults: { _controller: WsEventsBundle:Invitation:addBlacklist, emails: null }
ws_invit_blacklist_remove:
    pattern: /invitation/removeblacklist/{emails}
    defaults: { _controller: WsEventsBundle:Invitation:removeBlacklist, emails: null}
ws_invited_confirm:
    pattern: /invitation/confirm/{invited}
    defaults: { _controller: WsEventsBundle:Invitation:confirmParticipation }
    requirements:
        invited: \d+
ws_invited_deny:
    pattern: /invitation/deny/{invited}
    defaults: { _controller: WsEventsBundle:Invitation:denyParticipation }
    requirements:
        invited: \d+
ws_inviter_emails_ajax:
    pattern: /inviter/suggested_emails
    defaults: { _controller: WsEventsBundle:Invitation:getInviterEmailsSuggestion }
    requirements:
        _method: GET

#ALERTS
ws_alerts_create:
    pattern: /alert/create
    defaults: { _controller: WsEventsBundle:Alert:create }
    requirements:
        _method: GET|POST
ws_alerts_index:
    pattern: /alert/index
    defaults: { _controller: WsEventsBundle:Alert:index }
    requirements:
        _method: GET
ws_alerts_view:
    pattern: /alert/view/{alert}
    defaults: { _controller: WsEventsBundle:Alert:view }
    requirements:
        _method: GET
ws_alerts_delete:
    pattern: /alert/delete/{alert}
    defaults: { _controller: WsEventsBundle:Alert:delete }
    requirements:
        _method: GET|POST
ws_alerts_disable:
    pattern: /alert/disable/{alert}
    defaults: { _controller: WsEventsBundle:Alert:disable }
    requirements:
        _method: GET|POST
ws_alerts_enable:
    pattern: /alert/enable/{alert}
    defaults: { _controller: WsEventsBundle:Alert:enable }
    requirements:
        _method: GET|POST
ws_alerts_extend:
    pattern: /alert/extend/{nbmonth}/{alert}
    defaults: { _controller: WsEventsBundle:Alert:extend }
    requirements:
        _method: GET
        month: \d+
        alert: \d+
ws_alerts_mailing:
    pattern: /alert/send/{type}
    defaults: { _controller: WsEventsBundle:Alert:sendAlerts, type: daily }
    requirements:
        type: daily|weekly

#===========
#  Admin
#===========
admin_ws_events_index:
    pattern: /admin/index
    defaults: { _controller: WsEventsBundle:Admin:index }

admin_ws_events_unpublish:
    pattern: /admin/unpublish/{event}
    defaults: { _controller: WsEventsBundle:Admin:desactivate }

admin_ws_events_publish:
    pattern: /admin/publish/{event}
    defaults: { _controller: WsEventsBundle:Admin:activate }

admin_ws_events_delete:
    pattern: /admin/delete/{event}
    defaults: { _controller: WsEventsBundle:Admin:delete }