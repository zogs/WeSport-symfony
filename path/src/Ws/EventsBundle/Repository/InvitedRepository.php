<?php

namespace Ws\EventsBundle\Repository;

use Doctrine\ORM\EntityRepository;


use Ws\EventsBundle\Entity\Participation;
/**
 * InvitationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InvitedRepository extends EntityRepository
{
	public function findOneRandomly()
	{
		$sql = 'SELECT i.id, i.email FROM WsEventsBundle:Invited i';
		$query = $this->getEntityManager()->createQuery($sql);
		$ids = $query->getScalarResult();

		$randomId = $ids[array_rand($ids)];

		$invit = $this->_em->getRepository('WsEventsBundle:Invited')->find($randomId);
		return $invit;
	}
	
	public function confirmParticipation($invited)
	{
		$participant = new Participation();
		$participant->setEvent($invited->getInvitation()->getEvent());
		$participant->setUser($invited->getUser()); //set to null is the invited user is not registered
		$participant->setInvited($invited);

		$invited->setResponse(1);
		$invited->setDateResponse('now');
		
		$this->_em->persist($participant);
		$this->_em->persist($invited);
		$this->_em->flush();
	}

	public function denyParticipation($invited)
	{
		$invited->setResponse(0);
		$invited->setDateResponse('now');		

		$this->_em->persist($invited);
		$this->_em->flush();

		$this->_em->getRepository('WsEventsBundle:Participation')->findParticipationAndRemove($invited->getInvitation()->getEvent(),null,$invited);
	}
}
