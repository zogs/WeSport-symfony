<?php

namespace Ws\EventsBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * InvitationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InvitationRepository extends EntityRepository
{
	public function findOneRandomly()
	{
		$sql = 'SELECT i.id FROM WsEventsBundle:Invitation i';
		$query = $this->getEntityManager()->createQuery($sql);
		$ids = $query->getScalarResult();

		$randomId = $ids[array_rand($ids)];

		$invit = $this->_em->getRepository('WsEventsBundle:Invitation')->find($randomId);
		return $invit;
	}

	public function findSavedInvitation($user)
	{
		$qb = $this->createQueryBuilder('i');
		$qb->andWhere($qb->expr()->eq('i.inviter',':user'));
		$qb->andWhere($qb->expr()->isNotNull('i.name'));
		$qb->setParameter('user',$user);
		return $qb->getQuery()->getResult();	
	}

	public function findUserInvitation($user,$event)
	{
		$qb = $this->createQueryBuilder('i');
		$qb->andWhere('i.event = :event')->setParameter('event',$event);
		$qb->andWhere('i.inviter = :user')->setParameter('user',$user);	

		return $qb->getQuery()->getResult();
	}

	public function findEmailsByEvent($event)
	{
		$qb = $this->createQueryBuilder('i');
		$qb->andWhere('i.event = :event')->setParameter('event',$event);

		$a = array();
		$invits = $qb->getQuery()->getResult();
		foreach ($invits as $invit) {
			foreach ($invit->getInvited() as $invited) {
				$a[] = $invited->getEmail();
			}			
		}
		return $a;	

	}

	

}
